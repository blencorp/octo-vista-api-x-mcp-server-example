[tools]
python = "3.12"
uv = "latest"

# Hook that runs after tools are installed
[hooks]
postinstall = "mise run _setup"

# Hidden helper tasks
[tasks._setup]
hide = true
run = "python scripts/setup.py"

[tasks._start-mock]
hide = true
dir = "mock_server"
env = { COMPOSE_PROJECT_NAME = "vista-mock" }
run = ["docker-compose up -d", "python ../scripts/check_mock_server.py"]

[tasks.stop-mock]
description = "Stop the mock server"
dir = "mock_server"
env = { COMPOSE_PROJECT_NAME = "vista-mock" }
run = ["docker-compose down", "echo '✅ Mock server stopped'"]

[tasks.dev-with-mock]
description = "Start both transports with mock server (stdio + HTTP) - comprehensive testing"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Start mock server if needed (or check if it's running on host)
    "python scripts/start_mock_if_needed.py",
    "echo '🚀 Starting MCP transports for comprehensive testing...'",
    "echo ''",
    "echo '📍 Available endpoints:'",
    "echo '  📡 stdio: mcp dev server (for Claude Desktop)'", 
    "echo '  🌐 HTTP: http://localhost:8000/mcp'",
    "echo ''",
    "echo '🎯 Starting servers in background...'",
    # Start HTTP server in background
    "mkdir -p logs",
    "VISTA_MCP_HTTP_PORT=8000 uv run python http_server.py > logs/http.log 2>&1 &",
    # Wait for servers to start
    "sleep 3",
    "echo '✅ Background HTTP server started (logs in logs/http.log)'",
    "echo '🏃 Starting stdio MCP dev server (main)...'",
    "echo '   Use Ctrl+C to stop all servers'",
    # Run stdio server in foreground (this one you can Ctrl+C to stop all)
    "uv run mcp dev server.py:server",
]

[tasks.dev]
description = "Start development server (stdio only)"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Run MCP server
    "echo '🏃 Starting MCP server (stdio transport)...'",
    "echo '📡 Connect via Claude Desktop or MCP dev tools'", 
    "uv run mcp dev server.py:server",
]

[tasks.dev-stdio-only-with-mock]
description = "Start stdio server only with mock (simple setup)"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Start mock server if needed
    "python scripts/start_mock_if_needed.py",
    "echo '🏃 Starting MCP server (stdio transport only)...'",
    "echo '📡 Connect via Claude Desktop or MCP dev tools'",
    "uv run mcp dev server.py:server",
]

# Utility tasks (optional)
[tasks.test]
description = "Run tests"
run = "uv run pytest"

[tasks.lint]
description = "Check code quality (format + lint + type check)"
run = ["uv run black .", "uv run ruff check --fix .", "uv run mypy ."]

[tasks.logs]
description = "View mock server logs"
dir = "mock_server"
env = { COMPOSE_PROJECT_NAME = "vista-mock" }
run = "docker-compose logs -f"

[tasks.setup-claude]
description = "Set up Claude Desktop configuration"
run = "python scripts/setup_claude_desktop.py"

# === NEW STREAMABLE HTTP TASKS ===
[tasks.dev-http]
description = "Start Streamable HTTP server for development (RECOMMENDED)"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Start HTTP server in background and open inspector
    "echo '🚀 Starting Streamable HTTP server...'",
    "echo '📍 MCP endpoint: http://localhost:8000/mcp'",
    "echo '🎯 Opening MCP Inspector in 3 seconds...'",
    "echo ''",
    "echo '🔧 Configure your client with:'",
    "echo '  Transport: streamable-http'", 
    "echo '  URL: http://localhost:8000/mcp'",
    "echo ''",
    # Start server in background and then open inspector
    "uv run python http_server.py &",
    "sleep 3",
    "echo '🎭 Opening MCP Inspector...'",
    "npx @modelcontextprotocol/inspector",
]

[tasks.dev-http-with-mock]
description = "Start Streamable HTTP server with mock Vista API (RECOMMENDED)"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Start mock server if needed
    "python scripts/start_mock_if_needed.py",
    # Start HTTP server in background and open inspector
    "echo '🚀 Starting Streamable HTTP server with mock...'",
    "echo '📍 MCP endpoint: http://localhost:8000/mcp'",
    "echo '🎯 Opening MCP Inspector in 5 seconds...'",
    "echo ''",
    "echo '🔧 Configure your client with:'",
    "echo '  Transport: streamable-http'",
    "echo '  URL: http://localhost:8000/mcp'",
    "echo ''",
    # Start server in background and then open inspector
    "uv run python http_server.py &",
    "sleep 5", 
    "echo '⏳ Waiting for server to be ready...'",
    "echo '🎭 Opening MCP Inspector...'",
    "npx @modelcontextprotocol/inspector",
]

# Raw server tasks (without inspector)
[tasks.dev-http-server]
description = "Start Streamable HTTP server only (no inspector)"
run = [
    "python scripts/silent_setup.py",
    "echo '🚀 Starting Streamable HTTP server...'",
    "echo '📍 MCP endpoint: http://localhost:8000/mcp'",
    "echo '🔧 Connect manually with MCP Inspector:'",
    "echo '  npx @modelcontextprotocol/inspector'",
    "echo '  Transport: http, URL: http://localhost:8000/mcp'",
    "echo ''",
    "uv run python http_server.py",
]

[tasks.dev-http-server-with-mock]
description = "Start Streamable HTTP server with mock (no inspector)" 
run = [
    "python scripts/silent_setup.py",
    "python scripts/start_mock_if_needed.py",
    "echo '🚀 Starting Streamable HTTP server with mock...'",
    "echo '📍 MCP endpoint: http://localhost:8000/mcp'",
    "echo '🔧 Connect manually with MCP Inspector:'",
    "echo '  npx @modelcontextprotocol/inspector'",
    "echo '  Transport: http, URL: http://localhost:8000/mcp'",
    "echo ''",
    "uv run python http_server.py",
]

# === MULTI-TRANSPORT TASKS ===
[tasks.dev-stdio-http-with-mock] 
description = "Start stdio + HTTP transports with mock (recommended for testing)"
run = [
    # Auto-setup if needed
    "python scripts/silent_setup.py",
    # Start mock server if needed
    "python scripts/start_mock_if_needed.py",
    "echo '🚀 Starting stdio + HTTP transports...'",
    "echo ''",
    "echo '📍 Available endpoints:'",
    "echo '  📡 stdio: mcp dev server (for Claude Desktop)'", 
    "echo '  🌐 HTTP: http://localhost:8000/mcp'",
    "echo ''",
    "echo '🎯 Starting HTTP server in background...'",
    # Start HTTP server in background
    "mkdir -p logs",
    "VISTA_MCP_HTTP_PORT=8000 uv run python http_server.py > logs/http.log 2>&1 &",
    # Wait for server to start
    "sleep 3",
    "echo '✅ HTTP server started (log in logs/http.log)'",
    "echo '🏃 Starting stdio MCP dev server...'",
    # Run stdio server in foreground
    "uv run mcp dev server.py:server",
]

# === UTILITY TASKS ===
[tasks.stop-servers]
description = "Stop any background MCP servers"
run = [
    "echo '🛑 Stopping background MCP servers...'",
    "pkill -f 'http_server.py' || echo '   (no http_server.py processes found)'",
    "pkill -f 'server.py:server' || echo '   (no mcp dev processes found)'", 
    "echo '✅ Background servers stopped'",
]
